# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-04-13 12:29
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Board',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='BoardResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('link', models.CharField(max_length=1000)),
                ('added_on', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BoardResultType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('added_on', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='EngineeringSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField()),
                ('contact_number', models.CharField(max_length=13)),
                ('joined_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='FoundationSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='InappropriateReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Programme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification_name', models.CharField(max_length=100)),
                ('school', models.CharField(max_length=100)),
                ('board', models.CharField(max_length=100)),
                ('result', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Scholarship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks_in_board_exam', models.IntegerField()),
                ('marks_in_institute_exam', models.IntegerField()),
                ('monthly_family_income', models.IntegerField()),
                ('other_scholarship', models.BooleanField()),
                ('applied_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mother_name', models.CharField(blank=True, max_length=100)),
                ('father_name', models.CharField(blank=True, max_length=100)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('address', models.TextField()),
                ('postal_code', models.CharField(blank=True, max_length=6)),
                ('contact_number', models.CharField(max_length=13)),
                ('joined_on', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='StudyMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload_on', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(upload_to='')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Faculty')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.FoundationSubject')),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_code', models.CharField(max_length=100)),
                ('total_marks', models.CharField(max_length=50)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.FoundationSubject')),
            ],
        ),
        migrations.CreateModel(
            name='TestAttempt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_examination', models.DateField(auto_now=True)),
                ('marks_obtained', models.CharField(max_length=50)),
                ('remarks', models.CharField(max_length=100)),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Faculty')),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='EngineeringStudent',
            fields=[
                ('student_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='home.Student')),
                ('study_material_required', models.BooleanField(default=False)),
                ('academic_gaps_reason', models.CharField(max_length=500)),
                ('high_school_marks', models.FloatField()),
                ('average_marks_pcm', models.FloatField()),
                ('programme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Programme')),
                ('school_board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Board')),
                ('subjects', models.ManyToManyField(to='home.EngineeringSubject')),
            ],
            bases=('home.student',),
        ),
        migrations.CreateModel(
            name='FoundationStudent',
            fields=[
                ('student_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='home.Student')),
                ('school_name', models.CharField(max_length=100)),
                ('school_board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Board')),
                ('school_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.SchoolClass')),
                ('subjects', models.ManyToManyField(to='home.FoundationSubject')),
            ],
            bases=('home.student',),
        ),
        migrations.AddField(
            model_name='testattempt',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Student'),
        ),
        migrations.AddField(
            model_name='testattempt',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Test'),
        ),
        migrations.AddField(
            model_name='student',
            name='preferred_branch',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Branch'),
        ),
        migrations.AddField(
            model_name='student',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='scholarship',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.Student'),
        ),
        migrations.AddField(
            model_name='inappropriatereport',
            name='study_material',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.StudyMaterial'),
        ),
        migrations.AddField(
            model_name='faculty',
            name='high_school',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='high_school', to='home.Qualification'),
        ),
        migrations.AddField(
            model_name='faculty',
            name='highest_qualification',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='highest_qualification', to='home.Qualification'),
        ),
        migrations.AddField(
            model_name='faculty',
            name='intermediate',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='intermediate', to='home.Qualification'),
        ),
        migrations.AddField(
            model_name='faculty',
            name='teaches',
            field=models.ManyToManyField(to='home.FoundationSubject'),
        ),
        migrations.AddField(
            model_name='faculty',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='boardresult',
            name='result_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.BoardResultType'),
        ),
    ]
